export const PROJECT_BLOCKS = {
  ishistagram: {
    intro: {
      heading: "開発したきっかけ",
      body:
        "SNSが様々なシーンで活用される中で、SNSユーザーが個人の興味に応じたコンテンツを効率的に整理し、同じ趣味を持つコミュニティと繋がる方法が限られていると感じました。 そこで、趣味や興味のあるコンテンツを「ラベル」でカスタマイズし、個人の趣向を反映させたコンテンツ管理ができることを目的に開発しました。",
    },
    summary: {
      heading: "概要",
      body:
        "主にLaravelを用いてこのWebをアプリケーションを開発しました。ユーザーが投稿した画像やプロフィール画像などは、Amazon S3に保存しております。この開発を通して、CRUDの仕組みやデータベース設計、ユーザー登録などの基礎的な考え方を体系的に学ぶことができました。今後は実務レベルでこれらの技術を活用していきたいと考えております。",
    },
    layout: {
      heading: "画面構成",
      body:
        "プロフィール画面と新規投稿、投稿編集、検索結果、プロフィール編集などで構成される画像投稿型SNSのWebアプリケーションです。",
    },
    content: [
      {
        id: "profile",
        title: "プロフィール画面",
        img: "/img/works-detail/works-1-1.png",
        alt: "プロフィール画面",
        text:
          "ユーザーのプロフィール画面では、過去に投稿したものが画像で表示されます。 画面上部の「フォロワー」の箇所では、表示されるユーザー一覧から他のユーザーをフォローすることができます。また、ユーザー名やプロフィール画像など、プロフィールを編集することも可能です。さらに、投稿に関しては「ラベル選択」により選択したラベルをもつ投稿のみを表示させることができ、関連した投稿のみを閲覧したい場合に便利な機能となっております。",
      },
      {
        id: "new-post",
        title: "新規投稿画面",
        img: "/img/works-detail/works-1-2.png",
        alt: "新規投稿画面",
        text:
          "画像と投稿文、ラベルを設定して投稿することができます。ラベルを設定することによって、 プロフィール画面で、投稿の管理がしやすくなります。 ラベルは最大2個まで設定することができます。",
      },
      {
        id: "edit-post",
        title: "投稿編集画面",
        img: "/img/works-detail/works-1-3.png",
        alt: "投稿編集画面",
        text:
          "過去の投稿を投稿文とラベルのみ編集することができます。ラベルの変更や追加を行うことができるため、プロフィール画面で管理しやすくなります。",
      },
      {
        id: "search-result",
        title: "検索結果画面",
        img: "/img/works-detail/works-1-5.png",
        alt: "検索結果画面",
        text:
          "検索結果画面では、ハッシュタグやラベルで関連する投稿を検索することができます。 これにより、ユーザーが興味のある投稿のみを見つけることができます。また、興味や関心のある投稿をしているユーザーをフォローするきっかけにもなるため、ユーザー同士の交流も期待できます。",
      },
      {
        id: "edit-profile",
        title: "プロフィール編集画面",
        img: "/img/works-detail/works-1-6.png",
        alt: "プロフィール編集画面",
        text:
          "プロフィール編集画面では、プロフィール画像や名前、自己紹介など、ユーザーの基本情報を編集することができます。プロフィール画像が設定されていない場合には、デフォルトのアイコンが表示される仕様となっております。",
      },
    ],
    emphasis: {
      heading: "重視している点について",
      image: {
        src: "/img/works-detail/works-1-7.png",
        width: 800,
        height: 450,
        alt: "重視している点について",
      },
      body:
        "既存の画像投稿型SNSであるインスタグラムを参考にして開発しました。コンピュータのフォルダー管理をヒントにして、開発時点でインスタグラムには存在しないラベル機能というものを実装しました。 投稿にラベルを設定することで、プロフィール画面上の投稿画像をラベルごとに管理することができます。例えば、上記の画像が示すように、 「Foodie」というラベルを選択した時にはラベル名に「Foodie」が設定されている投稿のみが表示されます。 また、『  』の下に「Foodie」というラベル名が表示される仕様になっております。",
    },
    coding: {
      heading: "コーディングについて",
      body:
        "Webアプリケーションを開発する上で、PCはもちろんのこと、スマートフォンでも見やすくするためレスポンシブ対応を施しております。",
    },
  },

  foodieScout: {
    intro: {
      heading: "開発したきっかけ",
      body:
        "市場には数多くの飲食店予約サイトが存在しますが、真のグルメを満足させる飲食店の紹介に特化したサービスは不足していると感じました。 このサービスは、グルメ愛好家が個性豊かな美食店を発掘できることを目的に開発しました。",
    },
    summary: {
      heading: "概要",
      body:
        "主にLaravelとVue.jsを用いてこのWebをアプリケーションを開発しました。ユーザーが口コミで投稿した画像やプロフィール画像などは、Amazon S3に保存しております。また、検索機能はElasticsearchを用いて実装しました。さらに、口コミの星の評価は、バッジ処理を用いて実装しております。この開発では、Dockerでの開発環境の構築やVue.jsといったモダンな技術を取り入れるなど、実務を想定して取り組みました。今後は実務レベルでこれらの技術を活用していきたいと考えております。",
    },
    layout: {
      heading: "画面構成",
      body:
        "主にトップ画面と飲食店詳細画面、検索結果画面、プロフィール画面、レビュー作成画面などの ７画面から構成される飲食店予約サービスのWebアプリケーションです。",
    },
    content: [
      {
        id: "top-view",
        title: "トップ画面",
        img: "/img/works-detail/works-2-1.png",
        alt: "トップ画面",
        text:
          "トップ画面では、ユーザーが「料理ジャンル」や「おすすめ店舗」、「注目の店舗」から、飲食店を探すことができます。 また、「人気ユーザー欄」からは食通なユーザーのおすすめのお店やユーザーのおすすめ店舗ランキングを知ることができます。この箇所にあるユーザーの評価（星の評価）は、バッジ処理を用いて実装しました。さらに、ユーザーにはバッジが付与され、そのバッチのランクによってユーザーの信頼性も視覚的にわかるような仕様にしました。",
      },
      {
        id: "restaurant-detail",
        title: "飲食店詳細画面",
        img: "/img/works-detail/works-2-2.png",
        alt: "飲食店詳細画面",
        text:
          "飲食店詳細画面では、飲食店の基本情報やネット予約機能、ユーザーの口コミを表示させており、ユーザーが予約するために必要なコンテンツを掲載しております。カレンダーに〇がついている日付は、残りの予約可能枠までの人数を選択することができ、時間帯によって予約が埋まっている場合は、その時間帯で選択できないような仕様になっています。",
      },
      {
        id: "search-result",
        title: "検索結果画面",
        img: "/img/works-detail/works-2-3.png",
        alt: "検索結果画面",
        text:
          "検索機能は、Elasticsearchで実装しました。検索結果画面では、検索条件に合ったものが表示されます。例えば、「東京 和食」で検索した場合、東京にある和食の飲食店が表示されるようになっております。 また、数値的な評価 (星の評価) を載せることによって、ユーザーがより良い飲食店を見つけることができるようにしております。",
      },
      {
        id: "profile",
        title: "プロフィール画面",
        img: "/img/works-detail/works-2-4.png",
        alt: "プロフィール画面",
        text:
          "プロフィール画面では、ユーザーが訪れたことがある飲食店（本サービスで予約して来店したことがある飲食店）の口コミをランキング付きで投稿した場合に、このプロフィール画面に画像が表示されます。口コミとランキングはジャンルごとに作成することができ、他のユーザーは、プロフィール画面でジャンル別のおすすめ店舗を見つけることができます。",
      },
      {
        id: "review",
        title: "レビュー作成画面",
        img: "/img/works-detail/works-2-5.png",
        alt: "レビュー作成画面",
        text:
          "レビュー作成画面では、料理ジャンルごとに口コミの投稿とランキングを作成することができます。ランキングは、同じ順位をつけないような仕様になっています。",
      },
    ],
    emphasis: {
      heading: "重視している点について",
      image: {
        src: "/img/works-detail/works-2-6.png",
        width: 800,
        height: 450,
        alt: "先払い予約システム説明",
      },
      body:
        "このサービスは、グルメ業界における無断キャンセルとフードロスという深刻な問題に対処するため、予約時に予約料金を先払いするシステムを導入しました。\n予約料金は店舗が設定した予算の50%で、これによりお客様の予約へのコミットメントを促し、同時にレストランの収益損失を最小限に抑えることが可能です。 このアプローチは、持続可能な飲食文化を促進し、業界全体の責任ある運営に貢献することが期待されます。例えば、上記の画像では、予算が1人あたり¥4,500なので、予約時には1人あたり2,250P（¥2,250相当）の予約料金が発生する仕様になっています。 \nまた、ポイント残高が不足している場合は、『確認画面へ』というボタンが非活性化される処理を実装しております。",
    },
    coding: {
      heading: "コーディングについて",
      body:
        "Webアプリケーションを開発する上で、PCはもちろんのこと、スマートフォンでも見やすくするためレスポンシブ対応を施しております。",
    },
  },

  portfolio: {
    intro: {
      heading: "開発したきっかけ",
      body: "ポートフォリオサイトのデザイン改修により、Next.jsで開発しました。",
    },
    summary: {
      heading: "概要",
      body: "主にNext.jsを用いてこのサイトを開発しました。この開発を通して、独学で学んだNext.jsを活用することができ、モダンなフロントエンド技術を体系的に学ぶことができました。今後は実務レベルでこれらの技術を活用していきたいと考えております。",
    },
    layout: {
      heading: "画面構成",
      body: "トップページと作品紹介ページの２ページから構成されるポートフォリオサイトです。",
    },
    content: [
      {
        id: "top-view",
        title: "トップページ",
        img: "/img/works-detail/works-3-1.png",
        alt: "トップページ",
        text: "視覚的に分かりやすい配色や導線を重視したデザインにしております。ブラックをベースとした配色により、全体的に調和のとれた雰囲気を演出しました。",
      },
      {
        id: "works-detail",
        title: "作品紹介ページ",
        img: "/img/works-detail/works-3-2.png",
        alt: "作品紹介ページ",
        text: "作品紹介ページでは、それぞれの作品の概要や画面構成などを文章だけではなく、画像やアイコンを用いて視覚的にも伝わるように工夫を凝らしました。",
      },
    ],
    emphasis: {
      heading: "重視している点について",
      image: {
        src: "/img/works-detail/works-3-3.png",
        width: 800,
        height: 450,
        alt: "SKILLの説明",
      },
      body: "TOPページのSKILLでは、Chart.jsでレーダーチャートを作成し、５段階評価でスキルレベルを表現しました。",
    },
    coding: {
      heading: "コーディングについて",
      body: "Next.js/Reactベースで、PCはもちろんのこと、スマートフォンでも見やすくするためレスポンシブ対応を施しております。",
    },
  },
};

export const getBlocks = (project) => PROJECT_BLOCKS[project] ?? {};

export const getSections = (project) => (PROJECT_BLOCKS[project]?.content ?? []);
